#BlueJ class context
comment0.params=
comment0.target=Board()
comment0.text=\n\ Default\ Board\ Constructor\n\n
comment1.params=newNumberOfRows\ newNumberOfColumns\ newEmptySpotDisplay\ newStartingPositions
comment1.target=Board(int,\ int,\ java.lang.String,\ java.util.Hashtable)
comment1.text=\n\ Board\ Constructor\n\n\ @param\ newNumberOfRows\ the\ number\ of\ rows\ for\ the\ board\n\ @param\ newNumberOfColumns\ the\ number\ of\ columns\ for\ the\ board\n\ @param\ newEmptySpotDisplay\ the\ string\ to\ represent\ an\ empty\ space\ on\ the\ board\n\ @param\ newStartingPositions\ the\ starting\ positions\ of\ both\ players'\ pieces\n
comment10.params=
comment10.target=void\ populateBoard()
comment10.text=\n\ Method\ populateBoard\n\n\ Populates\ the\ board\ with\ null\ objects\n\n
comment11.params=
comment11.target=void\ addPlayerPiecesToBoard()
comment11.text=\n\ Method\ addPlayerPiecesToBoard\n\n\ Adds\ the\ player\ pieces\ to\ the\ boards\ based\ on\ the\ starting\ positions\n\n
comment12.params=
comment12.target=java.lang.String\ getBoard()
comment12.text=\n\ Method\ getBoard\n\n\ @return\ a\ string\ of\ the\ board\ in\ its\ current\ state\n
comment13.params=player
comment13.target=int\ getPlayerPieceTally(Player)
comment13.text=\n\ Method\ getPlayerPieceTally\n\n\ @param\ player\ the\ player\ to\ query\ for\ pieces\ remaining\ on\ the\ board\n\ @return\ the\ number\ of\ pieces\ of\ that\ player\ that\ are\ still\ on\ the\ board\n
comment14.params=location
comment14.target=GamePiece\ getPlayerPieceAtLocation(Location)
comment14.text=\n\ Method\ getPlayerPieceAtLocation\n\n\ @param\ location\ a\ location\ on\ the\ board\n\ @return\ the\ game\ piece\ at\ that\ position\n
comment15.params=location\ pieceMovingIn
comment15.target=void\ setPieceAtLocation(Location,\ GamePiece)
comment15.text=\n\ Method\ setPieceAtLocation\n\n\ @param\ location\ a\ location\ on\ the\ board\n\ @param\ pieceMovingIn\ the\ game\ piece\ to\ set\ at\ that\ position\n
comment2.params=newNumberOfRows
comment2.target=void\ setRows(int)
comment2.text=\n\ Method\ setRows\n\n\ @param\ newNumberOfRows\ the\ number\ of\ rows\ for\ the\ board\n
comment3.params=newNumberOfColumns
comment3.target=void\ setColumns(int)
comment3.text=\n\ Method\ setColumns\n\n\ @param\ newNumberOfColumns\ the\ number\ of\ columns\ for\ the\ board\n
comment4.params=newEmptySpotDisplay
comment4.target=void\ setEmptySpotDisplay(java.lang.String)
comment4.text=\n\ Method\ setEmptySpotDisplay\n\n\ @param\ newEmptySpotDisplay\ the\ string\ to\ represent\ an\ empty\ space\ on\ the\ board\n
comment5.params=newStartingPositions
comment5.target=void\ setStartingPositions(java.util.Hashtable)
comment5.text=\n\ Method\ setStartingPositions\n\n\ @param\ newStartingPositions\ the\ starting\ positions\ of\ both\ players'\ pieces\n
comment6.params=
comment6.target=int\ getRows()
comment6.text=\n\ Method\ getRows\n\n\ @return\ the\ number\ of\ rows\n
comment7.params=
comment7.target=int\ getColumns()
comment7.text=\n\ Method\ getColumns\n\n\ @return\ the\ number\ of\ columns\n
comment8.params=
comment8.target=java.lang.String\ getEmptySpotDisplay()
comment8.text=\n\ Method\ getEmptySpotDisplay\n\n\ @return\ the\ string\ representing\ an\ empty\ space\ on\ the\ board\n
comment9.params=
comment9.target=java.util.Hashtable\ getStartingPositions()
comment9.text=\n\ Method\ getStartingPositions\n\n\ @return\ the\ starting\ positions\ of\ both\ players'\ pieces\n
numComments=16
